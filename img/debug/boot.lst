     1                                  %define FLOPPY_A      0x00     ;Floopy 1
     2                                  %define HD_1          0x80     ;Hard Disk 1
     3                                  %define BIOS_READ     0x02     ;0x13 Ah
     4                                  %define BIOS_COM      0x13     ;bios command
     5                                  %define FLOPPY_SECTOR 18
     6                                  %define FLOPPY_TRACK  80
     7                                  %define FLOPPY_HEAD   2
     8                                  %define BOOTUP        0x07c0
     9                                  %define OS_ADDRESS    0x1000
    10                                  %define MODE_SIZE     2
    11                                  %define OS_SIZE       800
    12                                  %define TOTAL_SIZE    (MODE_SIZE+OS_SIZE)
    13                                  
    14                                  [bits 16]
    15                                  [org 0x0000] 
    16                                  Start:
    17 00000000 FA                          cli
    18 00000001 EA[0600]C007                jmp  BOOTUP:BootStart
    19                                  BootStart:
    20 00000006 B8C007                      mov  ax , BOOTUP           ;setting
    21 00000009 8ED8                        mov  ds , ax
    22 0000000B 8ED0                        mov  ss , ax
    23 0000000D 8EC0                        mov  es , ax
    24 0000000F BCFE03                      mov  sp , 0x3fe
    25 00000012 B80006                      mov  ax , 0x0600           ;clear screen
    26 00000015 BB0007                      mov  bx , 0x0700
    27 00000018 B90000                      mov  cx , 0
    28 0000001B BA4F18                      mov  dx , 0x184f
    29 0000001E CD10                        int  10h
    30 00000020 B402                        mov  ah , 0x02
    31 00000022 B700                        mov  bh , 0x00
    32 00000024 B601                        mov  dh , 0x01
    33 00000026 B200                        mov  dl , 0x00
    34 00000028 CD10                        int  10h
    35 0000002A E80500                      call Load_Loader
    36 0000002D EA00000010                  jmp  OS_ADDRESS:0          ;jump to mode change code
    37                                  
    38                                  Load_Loader:                        
    39 00000032 06                          push es
    40 00000033 B80010                      mov  ax , OS_ADDRESS
    41 00000036 8EC0                        mov  es , ax
    42 00000038 BB0000                      mov  bx , 0
    43 0000003B 31C9                        xor  cx , cx               ;set cx 0
    44                                  Load_Loop:
    45 0000003D B402                        mov  ah , BIOS_READ        ;read command
    46 0000003F B002                        mov  al , 0x02             ;2 sectors per read command
    47 00000041 8A2E[B700]                  mov  ch , byte [Track]
    48 00000045 8A0E[B600]                  mov  cl , byte [Sector]
    49 00000049 8A36[B800]                  mov  dh , byte [Head]
    50 0000004D B200                        mov  dl , FLOPPY_A
    51 0000004F CD13                        int  BIOS_COM
    52 00000051 725B                        jc   Load_Done             ;error if carry==1
    53 00000053 FF0E[B900]                  dec  word [TotalSector]    ;dec => i--
    54 00000057 FF0E[B900]                  dec  word [TotalSector]
    55 0000005B 7451                        jz   Load_Done
    56                                  Load_Buffer:
    57 0000005D 81FB00FC                    cmp  bx , 63 * 2 * 512
    58 00000061 7306                        jae  Next_Segmant
    59 00000063 81C30004                    add  bx , 1024             ;2 sectors
    60 00000067 EB0A                        jmp  Next_Read
    61                                  Next_Segmant:
    62 00000069 8CC3                        mov  bx , es
    63 0000006B 81C30010                    add  bx , 4 * 1024
    64 0000006F 8EC3                        mov  es , bx               ;update segment value
    65 00000071 31DB                        xor  bx , bx               ;clear bx
    66                                  Next_Read:
    67 00000073 FE06[B600]                  inc byte [Sector]          ;inc => i++
    68 00000077 FE06[B600]                  inc byte [Sector]
    69 0000007B 803E[B600]12                cmp byte [Sector] , FLOPPY_SECTOR
    70 00000080 7302                        jae Next_Track
    71 00000082 EBB9                        jmp Load_Loop
    72                                  Next_Track:
    73 00000084 803E[B800]00                cmp byte [Head] , 0x0      ;check if head==0 
    74 00000089 7417                        je  Next_Head1
    75                                  Next_Head0:
    76 0000008B C606[B600]01                mov byte [Sector] , 0x01
    77 00000090 C606[B800]00                mov byte [Head]   , 0x00
    78 00000095 FE06[B700]                  inc byte [Track]
    79 00000099 803E[B700]02                cmp byte [Track]  , FLOPPY_HEAD
    80 0000009E 730E                        jae Load_Done
    81 000000A0 EB9B                        jmp Load_Loop
    82                                  Next_Head1:
    83 000000A2 C606[B600]01                mov byte [Sector] , 0x01
    84 000000A7 C606[B800]01                mov byte [Head]   , 0x01
    85 000000AC EB8F                        jmp Load_Loop
    86                                  Load_Done:
    87 000000AE BAF203                      mov dx , 0x03f2            ;shut down floppy disk controller
    88 000000B1 B000                        mov al , 0x00
    89 000000B3 EE                          out dx , al
    90 000000B4 07                          pop es
    91 000000B5 C3                          ret
    92                                  
    93                                  LocalVariables:        
    94 000000B6 03                      Sector:      db 0x03
    95 000000B7 00                      Track:       db 0x00
    96 000000B8 00                      Head:        db 0x00   
    97 000000B9 2203                    TotalSector: dw TOTAL_SIZE
    98                                  
    99 000000BB 00<rept>                times 510 - ($ - $$) db 0x00
   100 000001FE 55AA                    dw 0xaa55
   101                                  
